{"ast":null,"code":"var _jsxFileName = \"/home/darshit/Desktop/Projects/gitissue_project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Content from './components/Content';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [state, updatestate] = useState();\n\n  const getUserAccountDetails = async () => {\n    //setLoading(true)\n    try {\n      const user = await Auth.currentAuthenticatedUser();\n      const Auth_token = await user.signInUserSession.idToken.jwtToken;\n      console.log('Auth-Token', Auth_token);\n      const url = baseURL + \"/User\" + \"?clientUserId=\" + user.getUsername();\n      var response = await fetch(url, {\n        method: 'GET',\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": Auth_token\n        },\n        json: true\n      });\n      var userD = await response.json();\n      console.log('userDetails', userD);\n      console.log(\"EMAIL**: \" + userD.email);\n      setUserDetails(userD);\n\n      if (userD.riskResponses == null) {// setOpen(true);\n      }\n\n      var nameofuser = userD.userFullName.split(' ');\n      setName(nameofuser[0]);\n      state['email_0'] = userDetails.email;\n      state['first_0'] = name;\n      return userD;\n    } catch (e) {\n      console.log(e);\n      return null;\n    } finally {//setLoading(false)\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Content, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"FKlPHufZW2+0uMkIMAttnjFvBmw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/darshit/Desktop/Projects/gitissue_project/src/App.js"],"names":["React","useState","useEffect","Header","Content","App","state","updatestate","getUserAccountDetails","user","Auth","currentAuthenticatedUser","Auth_token","signInUserSession","idToken","jwtToken","console","log","url","baseURL","getUsername","response","fetch","method","mode","headers","json","userD","email","setUserDetails","riskResponses","nameofuser","userFullName","split","setName","userDetails","name","e"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,KAAD,EAAOC,WAAP,IAAsBN,QAAQ,EAApC;;AAEA,QAAMO,qBAAqB,GAAG,YAAY;AACxC;AACA,QAAI;AACA,YAAMC,IAAI,GAAG,MAAMC,IAAI,CAACC,wBAAL,EAAnB;AACA,YAAMC,UAAU,GAAG,MAAMH,IAAI,CAACI,iBAAL,CAAuBC,OAAvB,CAA+BC,QAAxD;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BL,UAA1B;AACA,YAAMM,GAAG,GAAGC,OAAO,GAAG,OAAV,GAAoB,gBAApB,GAAuCV,IAAI,CAACW,WAAL,EAAnD;AAEA,UAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAD,EAAM;AAC5BK,QAAAA,MAAM,EAAE,KADoB;AAE5BC,QAAAA,IAAI,EAAE,MAFsB;AAG5BC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEP,2BAAiBb;AAFV,SAHmB;AAO5Bc,QAAAA,IAAI,EAAE;AAPsB,OAAN,CAA1B;AASA,UAAIC,KAAK,GAAG,MAAMN,QAAQ,CAACK,IAAT,EAAlB;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BU,KAA3B;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAcU,KAAK,CAACC,KAAhC;AACAC,MAAAA,cAAc,CAACF,KAAD,CAAd;;AAEA,UAAGA,KAAK,CAACG,aAAN,IAAuB,IAA1B,EAA+B,CAC7B;AACD;;AACD,UAAIC,UAAU,GAAGJ,KAAK,CAACK,YAAN,CAAmBC,KAAnB,CAAyB,GAAzB,CAAjB;AACAC,MAAAA,OAAO,CAACH,UAAU,CAAC,CAAD,CAAX,CAAP;AAEAzB,MAAAA,KAAK,CAAC,SAAD,CAAL,GAAmB6B,WAAW,CAACP,KAA/B;AACJtB,MAAAA,KAAK,CAAC,SAAD,CAAL,GAAmB8B,IAAnB;AAEI,aAAOT,KAAP;AACH,KA9BD,CA+BA,OAAOU,CAAP,EAAU;AACNrB,MAAAA,OAAO,CAACC,GAAR,CAAYoB,CAAZ;AACA,aAAO,IAAP;AACH,KAlCD,SAmCQ,CACJ;AACH;AACJ,GAxCC;;AA0CA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADH,eAEG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GApDQhC,G;;KAAAA,G;AAsDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport React, {useState, useEffect} from 'react';\nimport Header from './components/Header';\nimport Content from './components/Content';\n\nfunction App() {\n\n  const [state,updatestate] = useState();\n\n  const getUserAccountDetails = async () => {\n    //setLoading(true)\n    try {\n        const user = await Auth.currentAuthenticatedUser()\n        const Auth_token = await user.signInUserSession.idToken.jwtToken;\n        console.log('Auth-Token', Auth_token)\n        const url = baseURL + \"/User\" + \"?clientUserId=\" + user.getUsername();\n        \n        var response = await fetch(url, {\n            method: 'GET',\n            mode: \"cors\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n              \"Authorization\": Auth_token\n          },\n            json: true\n        })\n        var userD = await response.json()\n        console.log('userDetails', userD)\n        console.log(\"EMAIL**: \" + userD.email);\n        setUserDetails(userD);\n       \n        if(userD.riskResponses == null){\n          // setOpen(true);\n        }\n        var nameofuser = userD.userFullName.split(' ');\n        setName(nameofuser[0]);\n\n        state['email_0'] = userDetails.email;\n    state['first_0'] = name;\n\n        return userD\n    }\n    catch (e) {\n        console.log(e)\n        return null\n    }\n    finally {\n        //setLoading(false)\n    }\n}\n\n  return (\n    <div className=\"App\">\n       <Header />\n       <Content />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}