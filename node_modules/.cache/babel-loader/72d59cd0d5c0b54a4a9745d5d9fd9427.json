{"ast":null,"code":"var _jsxFileName = \"/home/darshit/Desktop/Projects/gitissue_project/src/components/Content.js\",\n    _s = $RefreshSig$();\n\nimport Icon from '@chakra-ui/icon';\nimport { Box, HStack, Text, Button, Stack } from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport { BiErrorCircle } from 'react-icons/bi';\nimport { AiOutlineCheck } from 'react-icons/ai';\nimport { Tabs, Tab } from '@mui/material';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Content(props) {\n  _s();\n\n  const [value, setValue] = useState(0);\n  const CustomTab = withStyles({\n    root: {\n      font: '500 20px \"Montserrat\", Sans-serif,all-petite-caps'\n    },\n    selected: {\n      backgroundColor: '#00fff8',\n      font: '500 18px \"Montserrat\", Sans-serif,all-petite-caps'\n    }\n  })(Tab);\n\n  function TabPanel(props) {\n    const {\n      children,\n      value,\n      index,\n      ...other\n    } = props;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: value === index && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: children\n      }, void 0, false)\n    }, void 0, false);\n  }\n\n  const handleTabs = (e, val) => {\n    setValue(val);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      backgroundColor: \"#f7f7f7\" // height={{\n      //   base: \"1200px\", // 0-48em\n      //   md: \"649px\", // 48em-80em,\n      //   xl: \"700px\", // 80em+\n      // }}\n      ,\n      padding: \"20px\",\n      width: {\n        base: \"100%\",\n        md: \"100%\",\n        xl: \"95%\"\n      },\n      borderWidth: \"2px\",\n      px: true,\n      marginStart: \"20px\",\n      borderRadius: \"lg\",\n      shadow: \"2xl\",\n      children: [/*#__PURE__*/_jsxDEV(HStack, {\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          fontSize: \"28px\",\n          as: BiErrorCircle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"24px\",\n          children: \"Issues\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          backgroundColor: \"#E4EBF4\",\n          borderRadius: \"30px\",\n          padding: \"4px\",\n          children: /*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"16px\",\n            children: props.issuesL\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        backgroundColor: \"#E4EBF4\",\n        borderRadius: \"20px\",\n        shadow: \"xl\",\n        padding: 5,\n        marginTop: \"20px\",\n        children: [/*#__PURE__*/_jsxDEV(Tabs, {\n          value: value,\n          onChange: handleTabs,\n          variant: \"fullWidth\",\n          indicatorColor: \"white\",\n          textColor: \"black\",\n          children: [/*#__PURE__*/_jsxDEV(CustomTab, {\n            label: \"Tenjin Managed Accounts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(CustomTab, {\n            label: \"Linked Accounts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          value: value,\n          index: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Content, \"ZbI4u1w4D9VO8WPA0g4veuP5Nho=\");\n\n_c = Content;\nexport default Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/home/darshit/Desktop/Projects/gitissue_project/src/components/Content.js"],"names":["Icon","Box","HStack","Text","Button","Stack","React","useState","BiErrorCircle","AiOutlineCheck","Tabs","Tab","Content","props","value","setValue","CustomTab","withStyles","root","font","selected","backgroundColor","TabPanel","children","index","other","handleTabs","e","val","base","md","xl","issuesL"],"mappings":"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","sourcesContent":["import Icon from '@chakra-ui/icon';\nimport { Box, HStack , Text, Button, Stack,} from '@chakra-ui/react';\nimport React, {useState} from 'react';\nimport {BiErrorCircle} from 'react-icons/bi'\nimport {AiOutlineCheck} from  'react-icons/ai'\nimport { Tabs , Tab} from '@mui/material';\n\nfunction Content(props) {\n\n    const [value,setValue] = useState(0);\n\n    const CustomTab = withStyles({\n        root: {\n          font: '500 20px \"Montserrat\", Sans-serif,all-petite-caps'\n        },\n        selected: {\n          backgroundColor: '#00fff8',\n          font: '500 18px \"Montserrat\", Sans-serif,all-petite-caps'\n        },\n      })(Tab);\n\n      function TabPanel(props){\n\n        const { children, value, index, ...other } = props;\n    \n        return(\n          <>\n           {value === index && (\n            <>{children}</>\n          )}\n          </>\n        )\n      }\n\n      const handleTabs = (e,val) => {\n        setValue(val);\n      }\n    \n\n    return (\n        <div class = \"container-fluid\" >\n           <Box  backgroundColor=\"#f7f7f7\"\n              // height={{\n              //   base: \"1200px\", // 0-48em\n              //   md: \"649px\", // 48em-80em,\n              //   xl: \"700px\", // 80em+\n              // }}\n              padding=\"20px\"\n              width={{ base: \"100%\", md: \"100%\", xl: \"95%\" }}\n              borderWidth=\"2px\"px\n              marginStart = \"20px\"\n              borderRadius=\"lg\"\n              shadow=\"2xl\">\n                  <HStack>\n                        <Icon fontSize = \"28px\" as = {BiErrorCircle} />\n                        <Text fontSize = \"24px\">Issues</Text>\n                        <Box backgroundColor = \"#E4EBF4\" borderRadius = \"30px\" padding = \"4px\">\n                        <Text  fontSize = \"16px\">{props.issuesL}</Text>\n                        </Box>\n                  </HStack>\n\n                 <Box   backgroundColor=\"#E4EBF4\"\n                        borderRadius=\"20px\"\n                        shadow=\"xl\"\n                        padding={5}\n                        marginTop = \"20px\">\n                         <Tabs  value = {value} onChange = {handleTabs} variant = \"fullWidth\"  indicatorColor=\"white\" \n          textColor=\"black\" >\n                          <CustomTab label = \"Tenjin Managed Accounts\"/>\n                          <CustomTab  label = \"Linked Accounts\"/>\n                        </Tabs>\n                        <TabPanel value={value} index={0}>\n\n                        </TabPanel>\n                 </Box>\n\n           </Box>\n        </div>\n    );\n}\n\nexport default Content;"]},"metadata":{},"sourceType":"module"}